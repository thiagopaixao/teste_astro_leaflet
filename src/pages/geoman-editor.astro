---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Editor Geoman">
  <div id="map" style="width: 100%; height: 100vh;"></div>

  <script>
    import L from 'leaflet';
    import '@geoman-io/leaflet-geoman-free';

    document.addEventListener('DOMContentLoaded', () => {
      const urlParams = new URLSearchParams(window.location.search);
      const lat = parseFloat(urlParams.get('lat')) || -14.235004;
      const lng = parseFloat(urlParams.get('lng')) || -51.92528;
      const zoom = parseInt(urlParams.get('zoom')) || 4;
      const geojsonString = urlParams.get('geojson') || '{}';

      const map = L.map('map').setView([lat, lng], zoom);

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);

      const drawnItems = new L.FeatureGroup();
      map.addLayer(drawnItems);

      map.pm.addControls({
        position: 'topleft',
        drawCircle: false,
      });

      try {
        const geojsonData = JSON.parse(geojsonString);
        L.geoJSON(geojsonData).addTo(drawnItems);
      } catch (error) {
        console.error('Erro ao analisar GeoJSON:', error);
      }

      map.on('pm:create', updateParent);
      map.on('pm:remove', updateParent);
      map.on('moveend', updateParent);

      function updateParent() {
        const center = map.getCenter();
        const newValue = {
          latitude: center.lat,
          longitude: center.lng,
          zoom: map.getZoom(),
          geojson: JSON.stringify(drawnItems.toGeoJSON())
        };
        
        window.opener.postMessage(newValue, '*');
      }

      window.exportGeoJSON = function() {
        const geoJSONData = drawnItems.toGeoJSON();
        const jsonString = JSON.stringify(geoJSONData, null, 2);
        
        const modal = document.createElement('div');
        modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[2000]';
        modal.innerHTML = `
          <div class="bg-white p-6 rounded-lg shadow-xl max-w-2xl w-full">
            <h2 class="text-2xl font-bold mb-4">GeoJSON Exportado</h2>
            <textarea id="geoJsonOutput" class="w-full h-64 p-2 border rounded mb-4" readonly></textarea>
            <div class="flex justify-between">
              <button id="copyButton" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors">Copiar GeoJSON</button>
              <button id="closeButton" class="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400 transition-colors">Fechar</button>
            </div>
          </div>
        `;
        
        document.body.appendChild(modal);
        
        // Definir o valor do textarea após o modal ser adicionado ao DOM
        requestAnimationFrame(() => {
          const textarea = document.getElementById('geoJsonOutput');
          textarea.value = jsonString;
          textarea.scrollTop = 0; // Rola para o topo do textarea
        });
        
        document.getElementById('copyButton').addEventListener('click', () => {
          const textarea = document.getElementById('geoJsonOutput');
          textarea.select();
          navigator.clipboard.writeText(textarea.value).then(() => {
            alert('GeoJSON copiado para a área de transferência!');
          }).catch(err => {
            console.error('Erro ao copiar texto: ', err);
          });
        });
        
        document.getElementById('closeButton').addEventListener('click', () => {
          document.body.removeChild(modal);
        });
      }
    });
  </script>

  <div class="fixed top-4 right-4 z-[1000]">
    <button onclick="exportGeoJSON()" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors">
      Exportar GeoJSON
    </button>
  </div>
</Layout>
